//流程控制
Const Control_Step0_SemiAuto          = 1 //无人值守0,人工确认1
Const Control_Step1_Prepare_Data      = 1 //读表
Const Control_Step2_Push_Box          = 0 //箱子
Const Control_Step3_Draw_SS           = 0 //引上
Const Control_Step4_Draw_OC           = 0 //光缆
Const Control_Step5_OC_Laying         = 0 //敷设
Const Control_Step6_FSB_Fiber_Process = 0 //上架
Const Control_Step7_OA_Process        = 0 //工单

Dim FSB_CC = []
Dim OCS_CC = []
Dim FSB_Info = []
Dim OC_Info = []
Dim Other_Info = []
Dim OC_Draw_Vector = [] //[1]x,[2]y
Dim FSB_and_OC_Topology = []

//Prepare_Data 数组列表
Dim PD_Temp_List_1 = []
Dim PD_Temp_List_2 = []
Dim PD_Temp_List_3 = []
Dim PD_OCS_Lenth_X_Y = []
Dim DT_Shape = []

//Prepare_Data 函数变量
Dim Opened_Excel_Obj
Dim PD_Temp_Data
Dim Base_Latitude
Dim Horizontal_Density
Dim Horizontal_Metre
Dim Vertical_Density
Dim Vertical_Metre
Dim PD_CL1
Dim PD_CL2
Dim PD_CL3
Dim Max_Lenth
Dim CSV_obj
Dim DT_obj
Dim List_7013

//Max_Number 函数变量
Dim MN_Num1
Dim MN_Num2

Const C_End = 100
Const Delay_Base_Unit =100
Const CSV_File = "C:\\Users\\Administrator\\Desktop\\分光器的配置查询结果.csv"
Const Source_File_Path = "C:\\Users\\Administrator\\Desktop\\test.xls"
Const FSB_Topology_Sheet = "FSB_Topology"
Const OC_Topology_Sheet = "OC_Topology"
Const Info_Sheet = "Info"
Const Longitude_Sheet = "longitude"
Const Latitude_Sheet = "latitude"
Const OCS_Fiber_Count_Sheet = "OCS_Fiber_Count"

Const FSB_Name_Constant         = 1 //FSB_Info 分纤箱名字
Const FSB_Longitude_Constant    = 2 //FSB_Info 分纤箱经度
Const FSB_Latitude_Constant     = 3 //FSB_Info 分纤箱纬度

Const Fiber_Count_Constant    = 1    //OC_Info 芯数常量
Const Lenth_Constant          = 2    //OC_Info 长度常量
Const Type_Constant           = 3    //OC_Info 类型常量
Const Start_Point_Constant    = 4    //OC_Info 起点常量 

Const Other_Info_Data_Column      =  2 //Other_Info 数据列
Const Other_Info_Count            = 14 //Other_Info 数据个数
Const RD_Name_Constant            =  1 //Other_Info 小区名称常量
Const SS_Name_Constant            =  2 //Other_Info 承载系统名称常量
Const Project_Num_Constant        =  3 //Other_Info 项目编号常量
Const Task_Name_Constant          =  4 //Other_Info 任务名称常量
Const DQS_Porject_Constant        =  5 //Other_Info 数据质量责任人_工程常量
Const DQS_City_Constant           =  6 //Other_Info 数据质量责任人_地市常量
Const DQS_District_Constant       =  7 //Other_Info 数据质量责任人_区县常量
Const DQS_Maintenance_Constant    =  8 //Other_Info 数据质量责任人_维护常量
Const District_Constant           =  9 //Other_Info 区县常量
Const Horizontal_Density_Constant = 10 //Other_Info 水平密度常量
Const Vertical_Density_Constant   = 11 //Other_Info 垂直密度常量
Const City_Constant               = 12 //Other_Info 地市常量
Const OC_Sys_Name_Constant        = 13 //Other_Info 光缆系统名称常量
Const OC_Sys_Type_Constant        = 14 //Other_Info 光缆规格常量

Const FSB_Name_Constant_2_Constant       = 1 //FSB_and_OC_Topology FSB名称
Const FSB_Downlink_Width_Constant        = 2 //FSB_and_OC_Topology FSB下行芯数
Const FSB_FS_Count_Constant              = 3 //FSB_and_OC_Topology FSB分光器数

Function Determine_Box_Type(Box_Name)
    If InStr(Box_Name,"GJ",1,false) <> 0
        If InStr(Box_Name,"光交",1,false) <> 0
            //光交
            #icon("@res:3qm833v9-2l3q-4kdk-8av3-kgn89tnsdrc7.png")
            Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"3qm833v9-2l3q-4kdk-8av3-kgn89tnsdrc7.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
            #icon("@res:iine3ca1-lh4r-v9b3-er6b-sdnknnctnr7g.png")
            Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"iine3ca1-lh4r-v9b3-er6b-sdnknnctnr7g.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
            #icon("@res:jnggnihj-eio2-l2r4-03l8-o8oefhchu2ki.png")
            Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"jnggnihj-eio2-l2r4-03l8-o8oefhchu2ki.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
        End If
    Else
        //分纤箱
        #icon("@res:3qm833v9-2l3q-4kdk-8av3-kgn89tnsdrc7.png")
        Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"3qm833v9-2l3q-4kdk-8av3-kgn89tnsdrc7.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
        #icon("@res:iine3ca1-lh4r-v9b3-er6b-sdnknnctnr7g.png")
        Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"iine3ca1-lh4r-v9b3-er6b-sdnknnctnr7g.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
        #icon("@res:0j8ecsss-3gqq-ith2-1d2g-ao53chmj827n.png")
        Image.Click({"wnd":[{"cls":"360se6_Frame","title":"中国移动外线资源管理系统 - 360安全浏览器 11.1","app":"360se"}]},{"height":0,"width":0,"x":0,"y":0},@res"0j8ecsss-3gqq-ith2-1d2g-ao53chmj827n.png",0.9,"left","click",10000,{"bContinueOnError":false,"iDelayAfter":Delay_Base_Unit*2,"iDelayBefore":Delay_Base_Unit*2,"bSetForeground":true,"sCursorPosition":"Center","iCursorOffsetX":0,"iCursorOffsetY":0,"sKeyModifiers":[],"sSimulate":"simulate"})
    End If
End Function
Function Max_Number(MN_Num1,MN_Num2)
    If MN_Num1 > MN_Num2
        Return MN_Num1
    Else
        Return MN_Num2
    End If
End Function
Function Prepare_Data()
    Opened_Excel_Obj = Excel.OpenExcel(Source_File_Path,false) //后台打开
    //构建FSB_CC[]
    For PD_CL1 = 1 to C_End
        For PD_CL2 = 1 to C_End
            PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[PD_CL1,PD_CL2])
            If PD_Temp_Data = ""
                Break
            End If
        Next
        PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[PD_CL1,1])
        If PD_Temp_Data = ""
            Break
        End If
        FSB_CC[PD_CL1] = PD_CL2 - 1
        //TracePrint(FSB_CC[PD_CL1])
    Next
    //构建OSC_CC[]
    For PD_CL1 = 1 To C_End
        For PD_CL2 =1 To C_End
            PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,(PD_CL2 + 1)])
            If PD_Temp_Data = ""
                Break
            End If
        Next
        PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,2])
        If PD_Temp_Data = ""
            Break
        End If
        OCS_CC[PD_CL1] = PD_CL2 - 1
    Next
    //构建FSB_Info[][][3]
    For PD_CL1 = 1 To Ubound(FSB_CC)
        For PD_CL2 = 1 To FSB_CC[PD_CL1]
            For PD_CL3 = 1 To 3
                PD_Temp_List_1[PD_CL3] = null
            Next
            PD_Temp_List_2[PD_CL2] = Clone(PD_Temp_List_1)
        Next
        FSB_Info[PD_CL1] = Clone(PD_Temp_List_2)
    Next
    //构建OC_Info[][][4]
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To OCS_CC[PD_CL1]
            For PD_CL3 = 1 To 4
                PD_Temp_List_1[PD_CL3] = null
            Next
            PD_Temp_List_2[PD_CL2] = Clone(PD_Temp_List_1)
        Next
        OC_Info[PD_CL1] = Clone(PD_Temp_List_2)
    Next
    //构建OC_Draw_Vector[][][2]
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To OCS_CC[PD_CL1]
            For PD_CL3 = 1 To 2
                PD_Temp_List_1[PD_CL3] = null
            Next
            PD_Temp_List_2[PD_CL2] = Clone(PD_Temp_List_1)
        Next
        OC_Draw_Vector[PD_CL1] = Clone(PD_Temp_List_2)
    Next
    //构建FSB_and_OC_Topology[][][10] 第三维长度还有说法,目前只加载分光器数,不考虑上行pos
    Max_Lenth = 0 //计算最长光缆的段落数
    For PD_CL1 = 1 To Ubound(OCS_CC)
        Max_Lenth = Max_Number(Max_Lenth,OCS_CC[PD_CL1])
    Next
    //TracePrint(Max_Lenth)
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To (Max_Lenth + 1)
            For PD_CL3 = 1 To 10
                PD_Temp_List_1[PD_CL3] = null
            Next
            PD_Temp_List_2[PD_CL2] = Clone(PD_Temp_List_1)
        Next
        FSB_and_OC_Topology[PD_CL1] = Clone(PD_Temp_List_2)
    Next
    //OC_Info 加载芯数
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To OCS_CC[PD_CL1]
            PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OCS_Fiber_Count_Sheet,[PD_CL1,(PD_CL2 + 1)])
            If PD_Temp_Data = ""
                Break
            End If
            OC_Info[PD_CL1][PD_CL2][Fiber_Count_Constant] = CInt(PD_Temp_Data)
        Next
        PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OCS_Fiber_Count_Sheet,[PD_CL1,2])
        If PD_Temp_Data = ""
            Break
        End If
    Next
    //OC_Info 加载长度
    Horizontal_Density = Excel.ReadCell(Opened_Excel_Obj,Info_Sheet,[Horizontal_Density_Constant,Other_Info_Data_Column])
    Vertical_Density = Excel.ReadCell(Opened_Excel_Obj,Info_Sheet,[Vertical_Density_Constant,Other_Info_Data_Column])
    Base_Latitude = CNumber(Excel.ReadCell(Opened_Excel_Obj,Latitude_Sheet,[1,1]))
    Horizontal_Metre = 111.11 * 1000 * Math.Cos(Base_Latitude * 3.1415926535 / 180) * Vertical_Density
    Vertical_Metre = 111.11 * 1000 * Horizontal_Density
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To OCS_CC[PD_CL1]
            PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,(PD_CL2 + 1)])
            PD_OCS_Lenth_X_Y = Split(PD_Temp_Data, "&")
            If PD_OCS_Lenth_X_Y[0] = 0 //竖线
                OC_Info[PD_CL1][PD_CL2][Lenth_Constant] = Math.Round(Math.Abs(Vertical_Metre * PD_OCS_Lenth_X_Y(1)),0)
            End If
            If PD_OCS_Lenth_X_Y[1] = 0 //横线
                OC_Info[PD_CL1][PD_CL2][Lenth_Constant] = Math.Round(Math.Abs(Horizontal_Metre * PD_OCS_Lenth_X_Y(0)),0)
            End If
            If (PD_OCS_Lenth_X_Y[0] <> 0 and PD_OCS_Lenth_X_Y[1] <> 0) //斜线
                OC_Info[PD_CL1][PD_CL2][Lenth_Constant] = Math.Round(Math.Abs(Math.Sqr((PD_OCS_Lenth_X_Y[0] * Vertical_Metre) ^ 2 + (PD_OCS_Lenth_X_Y[1] * Horizontal_Metre) ^ 2)),0)
            End If
        Next
    Next
    //OC_Info 加载型号
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To OCS_CC[PD_CL1]
            OC_Info[PD_CL1][PD_CL2][Type_Constant] = "GYTA-" & CStr(OC_Info[PD_CL1][PD_CL2][Fiber_Count_Constant])
            //TracePrint(OC_Info[PD_CL1][PD_CL2][Type_Constant])
        Next
    Next
    //Other_Info 加载其他信息
    For PD_CL1 = 1 To Other_Info_Count
        Other_Info[PD_CL1] = Excel.ReadCell(Opened_Excel_Obj,Info_Sheet,[PD_CL1,Other_Info_Data_Column])
        //TracePrint(Other_Info[PD_CL1])
    Next
    //FSB_Info 加载名称/经度/维度
    For PD_CL1 = 1 To Ubound(FSB_CC)
        For PD_CL2 = 1 To FSB_CC[PD_CL1]
            FSB_Info[PD_CL1][PD_CL2][FSB_Name_Constant] = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[PD_CL1,PD_CL2])
            FSB_Info[PD_CL1][PD_CL2][FSB_Longitude_Constant] = Excel.ReadCell(Opened_Excel_Obj,Longitude_Sheet,[PD_CL1,PD_CL2])
            FSB_Info[PD_CL1][PD_CL2][FSB_Latitude_Constant] = Excel.ReadCell(Opened_Excel_Obj,Latitude_Sheet,[PD_CL1,PD_CL2])
            //TracePrint(FSB_Info[PD_CL1][PD_CL2][FSB_Name_Constant])
            //TracePrint(FSB_Info[PD_CL1][PD_CL2][FSB_Longitude_Constant])
            //TracePrint(FSB_Info[PD_CL1][PD_CL2][FSB_Latitude_Constant])
        Next
    Next
    //OC_Info 加载起点
    For PD_CL1 = 1 To Ubound(OCS_CC)
        PD_Temp_List_1 = split(Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1, 1]), "&") //起点FSB坐标
        OC_Info[PD_CL1][1][Start_Point_Constant] = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[CNumber(PD_Temp_List_1[1]),CNumber(PD_Temp_List_1[0])])//起点FSB名称
        //TracePrint(OC_Info[PD_CL1][1][Start_Point_Constant])
    Next
    //OC_Draw_Vector 加载向量
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 to OCS_CC[PD_CL1] //光缆段向量存入二维数组
            PD_Temp_List_2 = split(Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,(PD_CL2 + 1)]), "&") 
            OC_Draw_Vector[PD_CL1][PD_CL2][1] = PD_Temp_List_2[0]
            OC_Draw_Vector[PD_CL1][PD_CL2][2] = PD_Temp_List_2[1]
            //TracePrint(OC_Draw_Vector[PD_CL1][PD_CL2][1])
            //TracePrint(OC_Draw_Vector[PD_CL1][PD_CL2][2])
        Next
    Next
    //FSB_and_OC_Topology 加载FSB名字&下行光缆芯数
    For PD_CL1 = 1 To Ubound(OCS_CC)
        PD_Temp_List_2[0] = 0
        PD_Temp_List_2[1] = 0
        For PD_CL2 = 1 To (Max_Lenth + 1)
            If PD_CL2 = 1
                PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,1]) //第 PD_CL1 条的起点坐标
                PD_Temp_List_1 = split(PD_Temp_Data,"&")
                FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Name_Constant_2_Constant] = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[CNumber(PD_Temp_List_1[1]),CNumber(PD_Temp_List_1[0])]) //第 PD_CL1 条的起点FSB名字
            Else
                PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,PD_CL2])
                PD_Temp_List_1 = split(PD_Temp_Data,"&")
                If len(PD_Temp_Data) = 0
                    Break
                End If
                If CNumber(PD_Temp_List_1[0]) >= 0
                    PD_Temp_List_2[0] = PD_Temp_List_2[0] + PD_Temp_List_1[0]
                Else
                    PD_Temp_List_2[0] = PD_Temp_List_2[0] - PD_Temp_List_1[0]
                End If
                If CNumber(PD_Temp_List_1[1]) >= 0
                    PD_Temp_List_2[1] = PD_Temp_List_2[1] - Math.Abs(PD_Temp_List_1[1])
                Else
                    PD_Temp_List_2[1] = PD_Temp_List_2[1] + Math.Abs(PD_Temp_List_1[1])
                End If
                PD_Temp_Data = Excel.ReadCell(Opened_Excel_Obj,OC_Topology_Sheet,[PD_CL1,1]) //第 PD_CL1 条的起点坐标
                PD_Temp_List_3 = split(PD_Temp_Data,"&")
                FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Name_Constant_2_Constant] = Excel.ReadCell(Opened_Excel_Obj,FSB_Topology_Sheet,[(CNumber(PD_Temp_List_3[1]) + CNumber(PD_Temp_List_2[1])),(CNumber(PD_Temp_List_3[0]) + CNumber(PD_Temp_List_2[0]))])
            End If
            FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Downlink_Width_Constant] = CNumber(Excel.ReadCell(Opened_Excel_Obj,OCS_Fiber_Count_Sheet,[PD_CL1,(PD_CL2 + 1)])) //FSB下行芯数,顺便处理结尾箱子,下行0芯
            If CNumber(Excel.ReadCell(Opened_Excel_Obj,OCS_Fiber_Count_Sheet,[PD_CL1,(PD_CL2 + 1)])) = null
                FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Downlink_Width_Constant] = 0
            End If
            //TracePrint(FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Name_Constant_2_Constant])
            //TracePrint(FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Downlink_Width_Constant])
        Next
    Next
    //处理7013表
    CSV_obj = CSV.Open(CSV_File)
    DT_obj = Datatable.BuildDataTable(CSV_obj,["网元内部编码","所属地市","所属区县","所属营销区域","所属小区","中文名称","业务类型","安装位置","所属对象名称","所属对象类型","项目编号","任务名称","分光比","主用OLT","主用OLT的PON端口","网元状态","产权归属","管理单位","设备型号","上级POS名称","上级设备是否为POS","上级POS端口","级别","别名","厂商","覆盖区域","备用OLT","备用OLT的PON口","资产编号","位置描述","二维码","采集名称","验收状态","未通过原因","时间戳","修改时间","网元内部编码","创建人","创建时间","修改人","是否合格","错误类型","纬度","经度","数据质量责任人(工程)","数据质量责任人(地市)","数据质量责任人(区县)","change_task_id","一线数据维护人（代维/一线）","上联PON口是否为10GE","维护地市","维护区县"])
    DT_obj = Datatable.SliceDataTable(DT_obj,[],[5,7,21])
    DT_Shape = Datatable.GetDataTableShape(DT_obj) //DT长宽[0]y,[1]x
    List_7013 = Datatable.GetDataTableByArray(DT_obj,false)
    //TracePrint(DT_obj)
    //TracePrint(List_7013)
    //处理7013表完成,DT_obj,DT_Shape,List_7013,可用
    //FSB_and_OC_Topology 加载分光器数
    For PD_CL1 = 1 To Ubound(OCS_CC)
        For PD_CL2 = 1 To (Max_Lenth + 1)
            PD_Temp_Data = FSB_and_OC_Topology[PD_CL1][PD_CL2][1]
            FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_FS_Count_Constant] = 0
            For PD_CL3 = 1 to DT_Shape[0]
                If PD_Temp_Data = List_7013[PD_CL3-1][1]
                    FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_FS_Count_Constant] = FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_FS_Count_Constant] + 1
                End If
            Next
            //TracePrint(FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_FS_Count_Constant])
            If FSB_and_OC_Topology[PD_CL1][PD_CL2][FSB_Downlink_Width_Constant] = 0 //短光缆跳出循环,避免数组越界
                Break
            End If
        Next
    Next
    //FSB_and_OC_Topology 加载完成,[A][B][C],第A条光缆,第B个箱子,C,1名字,2下行芯数,3分光器数
    //FSB_and_OC_Topology 加载分光器名字&上行POS端口
    Excel.CloseExcel(Opened_Excel_Obj,true) //立即保存
    Dialog.MsgBox("PD执行完成","测试标题","0",3,0)
End Function
Function MainProgress()
    If Control_Step1_Prepare_Data = 1
        Prepare_Data()
        If Control_Step0_SemiAuto = 1
            Dialog.MsgBox("测试内容","测试标题","0",3,0)
        End If
    End If
End Function
MainProgress()
